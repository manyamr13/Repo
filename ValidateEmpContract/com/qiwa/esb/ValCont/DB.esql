

BROKER SCHEMA com.qiwa.esb.ValCont
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE DB
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;
		-- refe to propreties and request header
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.ValidateEmpContract.ValContFlow.Variables;
		DECLARE InHeaderRef REFERENCE TO Environment.Variables.XMLNSC.ValidateEmploymentContractRq.Header;
		DECLARE InBodyRef REFERENCE TO Environment.Variables.XMLNSC.ValidateEmploymentContractRq.Body;
		-- create response Header

		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.ValidateEmploymentContractRs NAME 'Header';
		DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.ValidateEmploymentContractRs.Header;

		DECLARE SPResult, Result INTEGER;

		IF STARTSWITH (CAST(InBodyRef.LaborerIdNo AS CHARACTER), '2') THEN --Non Saudies only
			CALL Check_LaborerChangeSponsor(CAST(InBodyRef.LaborerIdNo AS CHARACTER)) INTO Result;

			IF Result <> 0 THEN --has pending CS
				CALL Create_esbXML_Response_Header(loadedPropertiesRef.PendingReqError,InHeaderRef,OutHeaderRef); --E0000570
				RETURN TRUE;
			END IF ;
		END IF;
		IF InBodyRef.RelatedToId IN (5,7,8,9)THEN
			DECLARE SPRes INTEGER;
			CALL Check_SpecialCasesContractStatus (CAST(InBodyRef.LaborerIdNo AS CHAR)) INTO SPRes;

			IF SPRes =-1 THEN --has active contr
				CALL Create_esbXML_Response_Header(loadedPropertiesRef.ActiveContract,InHeaderRef,OutHeaderRef);
				RETURN TRUE;
			ELSEIF SPRes =-2 THEN --has pending contr
				CALL Create_esbXML_Response_Header(loadedPropertiesRef.PendingContract,InHeaderRef,OutHeaderRef);
				RETURN TRUE;
			END IF;


		END IF ;
		--this to check if this lab already has contract
		DECLARE ResultID INT Check_LaborerContractStatus(CAST(InBodyRef.LaborOfficeId as INTEGER),
		CAST(InBodyRef.SequenceNumber as INTEGER),
		CAST(InBodyRef.LaborerIdNo AS CHARACTER) );

		IF ResultID = 0 THEN --has no active contr
			CALL Create_esbXML_Response_Header(GetESBSuccessCode(),InHeaderRef,OutHeaderRef);
			IF EXISTS (Environment.Variables.Output.RelatedToId[])  AND InHeaderRef.ChannelId = 'ESB'   THEN
				CREATE LASTCHILD OF  OutputRoot.XMLNSC.ValidateEmploymentContractRs NAME 'Body';
				SET OutputRoot.XMLNSC.ValidateEmploymentContractRs.Body.RelatedToId = Environment.Variables.Output.RelatedToId; 
			
			END IF ;

		ELSEIF ResultID = -1 THEN --has authinticated Contr
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.ApprovedError,InHeaderRef,OutHeaderRef);	


		ELSEIF ResultID = -2 THEN -- has pending contract
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.GerneralError,InHeaderRef,OutHeaderRef);


		END IF;
		
		
		
		RETURN TRUE;
	END;


	CREATE PROCEDURE Check_LaborerChangeSponsor (IN LaborerIdNo CHARACTER) RETURNS INTEGER
	LANGUAGE DATABASE EXTERNAL NAME "dbo.Check_LaborerChangeSponsor";


	CREATE PROCEDURE Check_LaborerContractStatus (IN LaborOfficeId INTEGER,
	IN SequenceNumber INTEGER,
	IN LaborerIdNo CHARACTER)
	RETURNS INTEGER LANGUAGE DATABASE
	EXTERNAL NAME "dbo.Check_LaborerContractStatus";

	CREATE PROCEDURE Check_SpecialCasesContractStatus ( IN LaborerIdNo CHARACTER)
	RETURNS INTEGER LANGUAGE DATABASE
	EXTERNAL NAME "dbo.Check_SpecialCasesContractStatus";

END MODULE;