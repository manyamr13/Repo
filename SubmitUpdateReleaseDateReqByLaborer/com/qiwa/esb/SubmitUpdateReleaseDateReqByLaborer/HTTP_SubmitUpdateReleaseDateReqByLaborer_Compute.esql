BROKER SCHEMA com.qiwa.esb.SubmitUpdateReleaseDateReqByLaborer
PATH Qiwa.Framework.Lib;


CREATE COMPUTE MODULE HTTP_SubmitUpdateReleaseDateReqByLaborer_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		IF EXISTS(Environment.Properties.SubmitUpdateReleaseDateReqByLaborer.HTTP_INT_SubmitUpdateReleaseDateReqByLaborer[]) THEN
            SET Environment.Properties.SubmitUpdateReleaseDateReqByLaborer.HTTP_SubmitUpdateReleaseDateReqByLaborer =
                Environment.Properties.SubmitUpdateReleaseDateReqByLaborer.HTTP_INT_SubmitUpdateReleaseDateReqByLaborer;
            DELETE FIELD Environment.Properties.SubmitUpdateReleaseDateReqByLaborer.HTTP_INT_SubmitUpdateReleaseDateReqByLaborer;
        END IF;

		DECLARE XMLVAR REFERENCE TO Environment.Properties.SubmitUpdateReleaseDateReqByLaborer.HTTP_SubmitUpdateReleaseDateReqByLaborer.Variables;
	
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
		
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.SubmitUpdateReleaseDateReqByLaborerRq.Header;     
		DECLARE rInputBody REFERENCE TO InputRoot.XMLNSC.SubmitUpdateReleaseDateReqByLaborerRq.Body;
		
		CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC');
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.SubmitUpdateReleaseDateReqByLaborerRs NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.SubmitUpdateReleaseDateReqByLaborerRs NAME 'Body';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.SubmitUpdateReleaseDateReqByLaborerRs.Header; 
		DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.SubmitUpdateReleaseDateReqByLaborerRs.Body;
		
		SET rOutHeaderRef = rInputHeader;
		
		--***************************************************************************************************************************
		     DECLARE ReleaseDateReqByLaborer CHAR;
		     SET ReleaseDateReqByLaborer = rInputBody.ReleaseDateReqByLaborer;
			 DECLARE Search_Result INT;
			 DECLARE Create_Result INT;
             DECLARE LaborerIdNo CHAR;
             SET LaborerIdNo = rInputHeader.UserInfo.IDNumber;
             DECLARE TotalRecordsCount INT;
             DECLARE StatusIds CHAR '1';
             DECLARE TCRequestId INT;
             SET TCRequestId = rInputBody.TCRequestId;
             DECLARE Result INT;--CARDINALITY
            
             DECLARE ReleaseDateReqByLaborer1 CHAR;
             SET ReleaseDateReqByLaborer1 =  cast(ReleaseDateReqByLaborer as CHAR FORMAT 'yyyy-MM-dd HH:mm:ss');
             DECLARE RequestId INT;
             SET RequestId = TCRequestId;
             
		CALL Search_TerminateContractRequests(NULL,
											  NULL,
											  TCRequestId,
											  NULL,
											  LaborerIdNo,								
											  NULL,
											  NULL,
											  StatusIds,
											  NULL,
											  NULL,
											  NULL,
											  NULL,
											  NULL,
											  NULL,
											  1,
											  1,
											  TotalRecordsCount,
                                 Environment.Variables.DB.result[])INTO Search_Result; 
                                 
                                 SET Result = CARDINALITY(Environment.Variables.DB.result[]);
                                 
                                 DECLARE ReleaseDate CHAR;
                                 SET ReleaseDate = Environment.Variables.DB.result[1].ReleaseDate;
                                 DECLARE RD CHAR;
            					 SET RD = (cast(ReleaseDate as CHAR FORMAT 'yyyy-MM-dd HH:mm:ss'));
            					                                  
                      IF Result = 0 THEN 
                                 	
                                 	
                                 	CALL Create_esbXML_Response_Header( XMLVAR.invalidTCRequestId,rInputHeader, rOutHeaderRef);
                                 	
                                 	
                       ELSE 
                                 	
                                 	
                             IF cast (ReleaseDateReqByLaborer as TIMESTAMP) > cast (ReleaseDate as TIMESTAMP) THEN
                                 		
                                 		
                                 		CALL Create_esbXML_Response_Header( XMLVAR.Lessthan,rInputHeader, rOutHeaderRef);
                             ELSE
                             	

                                		
                                	IF Environment.Variables.DB.result.UpdateRDRequestStatusId = 10  THEN
                                	   									 						 
										CALL Create_esbXML_Response_Header( XMLVAR.RDERROR,rInputHeader, rOutHeaderRef); 
											
									ELSE	
											
											
											
											 CALL Create_UpdateReleaseDateRequest(RequestId,
													 						 cast (ReleaseDateReqByLaborer1 as TIMESTAMP),
													 						 NULL,
													 						 Environment.Variables.DB.result[]) INTO Create_Result;
													 						 
													 						 
									        SET rOutBodyRef.RDUpdateRequestId = Environment.Variables.DB.result.RDUpdateRequestId;										
											CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInputHeader, rOutHeaderRef);
									END IF;
									
                            END IF;
													 						 
                    END IF; 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE Search_TerminateContractRequests (IN LaborOfficeId INT,
													   IN SequenceNumber INT,
													   IN TCRequestId INT,
													   IN RequesterIdNo CHAR,
													   IN LaborerIdNo CHAR,
													   IN LaborerName CHAR,
													   IN RequesterTypeId INT,
													   IN StatusIds CHAR,
													   IN RDUpdateRequestId CHAR,
													   IN CancelationRequestId INT,
													   IN TCReasonId INT,
													   IN CreationDate CHAR,
													   IN ReleaseDate CHAR,
													   IN RemainingDays INT,
													   IN PageSize INT,
													   IN PageIndex INT,
													   INOUT TotalRecordsCount INT
													   )
									RETURNS INTEGER LANGUAGE DATABASE DYNAMIC RESULT SETS 1
									 EXTERNAL NAME "dbo.Search_TerminateContractRequests";

    
									 
   CREATE PROCEDURE Create_UpdateReleaseDateRequest (IN RequestId INT,
   												 IN ReleaseDateReqByLaborer TIMESTAMP,				
											     IN MWTransationId INT
											  )
									RETURNS INTEGER LANGUAGE DATABASE DYNAMIC RESULT SETS 1
									 EXTERNAL NAME "dbo.Create_UpdateReleaseDateRequest"; 
END MODULE;

