BROKER SCHEMA com.qiwa.esb.getcontractstatuses
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE ConStatuses_DBCall
	CREATE FUNCTION Main() RETURNS BOOLEAN

	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		IF FIELDNAME(Environment.Variables) IS NULL THEN
			CREATE FIELD Environment.Variables;
		END IF;

		DECLARE EV REFERENCE TO Environment.Variables;
		DECLARE i INTEGER 1;
		DECLARE Result INTEGER;		

		IF EXISTS(Environment.Properties.GetContractStatuses.HTTP_INT_GetContractStatuses[]) THEN
			SET Environment.Properties.GetContractStatuses.HTTP_GetContractStatuses =
			Environment.Properties.GetContractStatuses.HTTP_INT_GetContractStatuses;
			DELETE FIELD Environment.Properties.GetContractStatuses.HTTP_INT_GetContractStatuses;
		END IF;

		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.GetContractStatuses.HTTP_GetContractStatuses;
		DECLARE rInHeaderRef REFERENCE TO InputRoot.XMLNSC.GetContractStatusesRq.Header;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.GetContractStatusesRs NAME 'Header';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.GetContractStatusesRs.Header;

		CALL Get_ContractStatuses (
								EV.QiwaDB.ResultSet[]) INTO Result;
		COMMIT;
		
		IF NOT EXISTS(EV.QiwaDB.ResultSet[]) THEN
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.Variables.NoDataFound,rInHeaderRef,rOutHeaderRef);
		ELSE
			CREATE LASTCHILD OF OutputRoot.XMLNSC.GetContractStatusesRs NAME 'Body';
			DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.GetContractStatusesRs.Body;
			CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInHeaderRef,rOutHeaderRef);

			FOR SOURCE AS EV.QiwaDB.ResultSet[] DO
				SET rOutBodyRef.StatusList.StatusItem[i].Code = SOURCE.Code;
				SET rOutBodyRef.StatusList.StatusItem[i].NameAr = SOURCE.NameAr;
				SET rOutBodyRef.StatusList.StatusItem[i].NameEn = SOURCE.NameEn;
				SET i = i + 1;
			END FOR;
		END IF;

		RETURN TRUE;
	END;
CREATE PROCEDURE Get_ContractStatuses () RETURNS INTEGER

LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Get_ContractStatuses";

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

END MODULE;