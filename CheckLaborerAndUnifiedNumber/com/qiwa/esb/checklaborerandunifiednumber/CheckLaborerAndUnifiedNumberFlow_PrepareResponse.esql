BROKER SCHEMA com.qiwa.esb.checklaborerandunifiednumber
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE CheckLaborerAndUnifiedNumberFlow_PrepareResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD 	  = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 	  = Environment.Variables.MQRFH2;  
		
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CheckLaborerAndUnifiedNumberRs NAME 'Header';
		DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckLaborerAndUnifiedNumberRs.Header;
		DECLARE loadProperties REFERENCE TO Environment.Properties.CheckLaborerAndUnifiedNumber.CheckLaborerAndUnifiedNumberFlow;
		DECLARE InHeaderRef REFERENCE TO Environment.Variables.XMLNSC.CheckLaborerAndUnifiedNumberRq.Header;
		
		
		DECLARE u INT;
		DECLARE  col CHAR; 
		DECLARE MLSDrow ROW ;  
		DECLARE loopsize INT CARDINALITY (InputRoot.XMLNSC.sql.row[]); 
		DECLARE o INT 1; 
		
--		WHILE o <= loopsize DO
			
		SET u = 1;
                 WHILE u <=2 DO
                    
                 SET col = loadProperties.column.{'column' || CAST(u AS CHAR)};
                 SET MLSDrow.{col}[]= (
                    SELECT R.value AS {col}  
                    FROM InputRoot.XMLNSC.sql.row[o].column[] as R 
                    WHERE R.name = loadProperties.column.{'column' || CAST(u AS CHAR)}); 
                   
                    SET Environment.Variables.Row[o].{col} =    MLSDrow.{col}.{col};  
                    
                 SET u = u + 1;
                 END WHILE;  
                 
--		set o = o +1;
--		END WHILE;
 					--returned errors/data in header 
 						IF ( Environment.Variables.Row[o].LaborerExist = 0 AND Environment.Variables.Row[o].UnifiedNumberExist = 0)
                           OR 
                        	(Environment.Variables.Row[o].LaborerExist = 0 AND Environment.Variables.Row[o].UnifiedNumberExist = 1)
                        	 THEN 
                        	 CALL Create_esbXML_Response_Header(loadProperties.Variables.NoLabInfo,InHeaderRef,OutHeaderRef);
                         ELSEIF Environment.Variables.Row[o].LaborerExist = 1 AND Environment.Variables.Row[o].UnifiedNumberExist = 0 THEN
                        	 CALL Create_esbXML_Response_Header(loadProperties.Variables.UnifiedNoNotFound,InHeaderRef,OutHeaderRef);
                        ELSEIF Environment.Variables.Row[o].LaborerExist = 1 AND Environment.Variables.Row[o].UnifiedNumberExist = 1 THEN
                             CALL Create_esbXML_Response_Header(GetESBSuccessCode(),InHeaderRef,OutHeaderRef);	
						ELSE
 							 CALL Create_esbXML_Response_Header(loadProperties.Variables.TechnicalError,InHeaderRef,OutHeaderRef);
 						END IF;	
 					
 					
--		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
