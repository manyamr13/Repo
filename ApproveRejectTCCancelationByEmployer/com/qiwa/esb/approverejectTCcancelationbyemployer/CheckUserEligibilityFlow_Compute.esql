BROKER SCHEMA com.qiwa.esb.approverejectTCcancelationbyemployer
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE CheckUserEligibilityFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		
		 CALL CopyMessageHeaders();
		 
		 --DECLARE THE HEADER AND THE BODY OF THE FILTER  
		DECLARE rInHeader REFERENCE TO Environment.Variables.Header; 
		DECLARE rInBody REFERENCE TO Environment.Variables.Body; 
	  	
		
			
	--DECLEARING REFRENCE TO THE ApproveRejectTCCancelationByEmployerFlow XML FLOW
	
	   DECLARE propertiesRef  REFERENCE TO Environment.Properties.ApproveRejectTCCancelationByEmployer.HTTP_ApproveRejectTCCancelationByEmployer.Variables;
		
		 
	   	
	  	SET OutputRoot.Properties = Environment.Variables.Properties;
        SET OutputRoot.MQMD  = Environment.Variables.MQMD;
        SET OutputRoot.MQRFH2  = Environment.Variables.MQRFH2;
	
		
	 --DECLARE THE DATA TAKEN FROM Search_TerminateContractRequests PROCEDURE 
		DECLARE LaborOfficeId INT   Environment.Variables.LaborOfficeId;
		DECLARE SequenceNumber INT   Environment.Variables.SequenceNumber;
		DECLARE EstablishmentSequence INT   Environment.Variables.SequenceNumber;
		DECLARE ServiceId INT 18;
		 
		
		 --CRAETE THE  ValidateVisaCancellationRs HEADER AND BODY 
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CheckUserEligibilityRq NAME 'Header'; 
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRq.Header;  
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CheckUserEligibilityRq NAME 'Body'; 
		DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRq.Body;   
	 		
	 	-- COPY HEADERS
	 	 SET rOutHeaderRef=rInHeader;    
	 	 
	 	 
		--PASSING PARAMETERS TO CALL INTERNAL SERVICE
		 SET rOutHeaderRef.ServiceCode = propertiesRef.ServiceCode; 
		
	 	--SETTING THE  CheckUserEligibility SERVICE URL TO BE CALLED
		--SET OutputLocalEnvironment.Destination.HTTP.RequestURL = propertiesRef.HTTPurl;    
		SET rOutBodyRef.IdNo=rInHeader.UserInfo.IDNumber;
		SET rOutBodyRef.LaborOfficeId=LaborOfficeId;
	    SET rOutBodyRef.EstablishmentSequence = SequenceNumber; 
		SET rOutBodyRef.ServiceId=ServiceId;
		
		
		    
	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
