BROKER SCHEMA com.qiwa.esb.getcontractdetails

CREATE COMPUTE MODULE GetConDetails_SP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		-- creating refrences for the header and body of the response
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.GetContractDetailsRq.Header;
		DECLARE rInputBody REFERENCE TO InputRoot.XMLNSC.GetContractDetailsRq.Body;
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.GetContractDetails.GetContractDetailsFlow.Variables;
		
		-- declaring all variables sent in the request
		SET Environment.Variables.Properties = InputRoot.Properties;
		SET Environment.Variables.MQMD = InputRoot.MQMD;
		SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;
		SET Environment.Variables.XMLNSC = InputRoot.XMLNSC;
		--copying headers to output 
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;

		--If the IdNumber in the header is not exist
		IF NOT EXISTS(rInputHeader.UserInfo.IDNumber[]) THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.NoIdNumber;
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;
		END IF;

		-- call the "Get_ContractDetails" procedure 
		CALL Get_ContractDetails (
									CAST(rInputBody.ContractId AS INTEGER),
									Environment.Variables.DB.ResultSet[]
		);

		-- check
		--If the received LaborerIdNo = IdNumber from the header then return the response or ChannelID is ESB, unifiedPortal  
		IF CAST(rInputHeader.UserInfo.IDNumber AS INT) = CAST(Environment.Variables.DB.ResultSet.LaborerIdNo AS INT)   
		OR rInputHeader.ChannelId IN(loadedPropertiesRef.unifiedPortal, loadedPropertiesRef.ChannelId) THEN
			SET Environment.Variables.SkipChck = TRUE;
			PROPAGATE TO TERMINAL 'out2';
			RETURN FALSE;
		END IF;

		--call the "CheckUserEligibility"
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CheckUserEligibilityRq NAME 'Header';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRq.Header;
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CheckUserEligibilityRq NAME 'Body';
		DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRq.Body;

		SET rOutHeaderRef = rInputHeader;
		SET rOutHeaderRef.ServiceCode = loadedPropertiesRef.CheckUserCode;
		SET rOutHeaderRef.ChannelId = loadedPropertiesRef.ChannelId;

		SET rOutBodyRef.UserId = rInputHeader.UserInfo.UserId;
		SET rOutBodyRef.IdNo = rInputHeader.UserInfo.IDNumber;
		SET rOutBodyRef.LaborOfficeId = Environment.Variables.DB.ResultSet[1].LaborOfficeId;
		SET rOutBodyRef.EstablishmentSequence = Environment.Variables.DB.ResultSet[1].SequenceNumber;
		SET rOutBodyRef.ServiceId = '18';

		RETURN TRUE;
	END;
	
	-- the procedure that is called to Get Contract details
	CREATE PROCEDURE Get_ContractDetails (IN RequestId INTEGER)
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Get_ContractDetails";

END MODULE;