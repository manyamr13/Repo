

BROKER SCHEMA com.qiwa.esb.contractauthenticationindicator
PATH Qiwa.Framework.Lib; 

CREATE COMPUTE MODULE DBCall
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		 
		IF EXISTS(Environment.Properties.ContractAuthInd.HTTP_INT_ContractAuthInd[]) THEN
			set Environment.Properties.ContractAuthInd.HTTP_ContractAuthInd =
			Environment.Properties.ContractAuthInd.HTTP_INT_ContractAuthInd;
			DELETE FIELD Environment.Properties.ContractAuthInd.HTTP_INT_ContractAuthInd;
		END IF;

		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.ContractAuthInd.HTTP_ContractAuthInd.Variables;		

			-- reference to input 
		DECLARE rInBodyRef REFERENCE TO InputRoot.XMLNSC.ContractAuthenticationIndicatorRq.Body;
		DECLARE rInHeaderRef REFERENCE TO InputRoot.XMLNSC.ContractAuthenticationIndicatorRq.Header; 
		
		CALL Get_ContrCounts ( CAST(rInBodyRef.LaborOfficeId AS INT), 
								CAST(rInBodyRef.SequenceNumber AS INT),
								Environment.Variables.GetCount[]); 
		DECLARE rDB REFERENCE TO Environment.Variables.GetCount;
	
		DECLARE pattern CHARACTER '###0.00';

		DECLARE SaudisCount,ResultSet, ForeignersCount INT;
		DECLARE TotalLaborersCount, TotalAuthenticatedContracts INTEGER;
		DECLARE SaudisAuthenticationPercentage, ForeignersAuthenticationPercentage, TotalAuthenticationPercentage CHARACTER;
		
		-- Calculations for Final Output fields
		SET TotalLaborersCount = Environment.Variables.GetCount.SaudisCount + Environment.Variables.GetCount.ForeignersCount ; 
		SET TotalAuthenticatedContracts = Environment.Variables.GetCount.SaudisContractsCount + Environment.Variables.GetCount.ForeignersContractsCount ; 

		IF CAST(rDB.SaudisContractsCount AS INT) > 0 AND CAST(rDB.SaudisCount AS INT) > 0 THEN    
			SET SaudisAuthenticationPercentage = (CAST(rDB.SaudisContractsCount AS DECIMAL) /CAST(rDB.SaudisCount AS DECIMAL)* 100);
		ELSE
			SET SaudisAuthenticationPercentage = 0;
		END IF;

		IF CAST(rDB.ForeignersContractsCount AS INT) > 0 AND CAST(rDB.ForeignersCount AS INT) > 0 THEN  
			SET ForeignersAuthenticationPercentage = (CAST(rDB.ForeignersContractsCount AS DECIMAL) /CAST(rDB.ForeignersCount AS DECIMAL)* 100) ;
		ELSE
			SET ForeignersAuthenticationPercentage = 0;
		END IF;

		IF TotalAuthenticatedContracts > 0 AND TotalLaborersCount > 0 THEN
			SET TotalAuthenticationPercentage = (CAST(TotalAuthenticatedContracts AS DECIMAL) / CAST(TotalLaborersCount AS DECIMAL)* 100) ;
		ELSE
			SET TotalAuthenticationPercentage = 0;
		END IF;
		
				
		-- create output
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs NAME 'Header';
		DECLARE rOutHeader REFERENCE TO OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Header;
		CREATE LASTCHILD OF OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs NAME 'Body';
		
		-- Create final Output Fields
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.ForeignersCount = rDB.ForeignersCount ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.SaudisCount = rDB.SaudisCount ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.TotalLaborersCount = TotalLaborersCount ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.ForeignersAuthenticatedContracts = rDB.ForeignersContractsCount ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.SaudisAuthenticatedContracts = rDB.SaudisContractsCount  ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.TotalAuthenticatedContracts = TotalAuthenticatedContracts ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.SaudisAuthenticationPercentage = CAST(CAST(SaudisAuthenticationPercentage AS DECIMAL) AS CHARACTER FORMAT pattern) || '%' ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.ForeignersAuthenticationPercentage = CAST(CAST(ForeignersAuthenticationPercentage AS DECIMAL) AS CHARACTER FORMAT pattern) || '%' ;
		SET OutputRoot.XMLNSC.ContractAuthenticationIndicatorRs.Body.TotalAuthenticationPercentage = CAST(CAST(TotalAuthenticationPercentage AS DECIMAL) AS CHARACTER FORMAT pattern) || '%' ;
		-- Success call
		CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInHeaderRef,rOutHeader);
		RETURN TRUE;
		
	END;


	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE Get_ContrCounts (
	IN p_LaborOfficeId INTEGER,
	IN p_SequenceNumber INTEGER)
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Contracts_Authentication_Count_Get";

END MODULE;