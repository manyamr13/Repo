BROKER SCHEMA com.qiwa.esb.SubmitTCReqByLaborer
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE ValidateLaborerInTC_ValidateLaborerInTC
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		 CALL CopyMessageHeaders();
		 
	--DECLARE THE HEADER AND THE BODY OF THE REQUEST
		DECLARE rInHeader REFERENCE TO Environment.Variables.Header; 
		DECLARE rInBody REFERENCE TO Environment.Variables.Body; 
	  	
		
	--DECLEARING REFRENCE TO THE SubmitTCReqByLaborerFlow XML FLOW
	   DECLARE propertiesRef  REFERENCE TO Environment.Properties.SubmitTCReqByLaborer.HTTP_SubmitTCReqByLaborer.Variables;
	   
		
	 --DECLARE THE DATA TAKEN FROM Search_TerminateContractRequests PROCEDURE 
		DECLARE LaborOfficeId INT  rInBody.LaborOfficeId;
		DECLARE SequenceNumber INT  rInBody.SequenceNumber;
		DECLARE LaborerIdNo INT  rInHeader.UserInfo.IDNumber;
		DECLARE LaborerTypeId INT Environment.Variables.LaborerTypeId; 
		DECLARE RequesterTypeId INT 2;
		
		 --CRAETE THE  ValidateVisaCancellationRs HEADER AND BODY 
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.ValidateLaborerInTCRq NAME 'Header'; 
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.ValidateLaborerInTCRq.Header;  
		CREATE LASTCHILD OF OutputRoot.XMLNSC.ValidateLaborerInTCRq NAME 'Body'; 
		DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.ValidateLaborerInTCRq.Body;   
	 		
	 	-- COPY HEADERS
	 	 SET rOutHeaderRef=rInHeader;    
	 	 
	 	 
		--PASSING PARAMETERS TO CALL INTERNAL SERVICE
		
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = propertiesRef.HTTPurl;   
		SET rOutHeaderRef.ChannelId = propertiesRef.ChannelId;
		SET rOutHeaderRef.ServiceCode = propertiesRef.ServiceCode;
		--PASSING THE REST PARAMETERS  
		
		SET rOutBodyRef.LaborOfficeId=rInBody.LaborOfficeId;
		SET rOutBodyRef.SequenceNumber = rInBody.SequenceNumber;
		SET rOutBodyRef.LaborerIdNo=rInHeader.UserInfo.IDNumber;
--		SET rOutBodyRef.LaborerTypeId = 2;  
--	    SET rOutBodyRef.RequesterTypeId = 1;   
	    SET rOutBodyRef.LaborerTypeId = Environment.Variables.LaborerTypeId;  
	    SET rOutBodyRef.RequesterTypeId = 2; 
--
----testing
--SET rOutBodyRef.RequesterTypeId = 1; 
--	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
