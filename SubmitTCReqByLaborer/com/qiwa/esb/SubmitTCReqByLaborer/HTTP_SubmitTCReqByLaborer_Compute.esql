BROKER SCHEMA com.qiwa.esb.SubmitTCReqByLaborer
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE HTTP_SubmitTCReqByLaborer_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		--COPYING HEADERS
		 CALL CopyMessageHeaders();
		 
		 	 
	--DECLARE THE HEADER AND THE BODY OF THE REQUEST 
		DECLARE rInHeaderRef REFERENCE TO InputRoot.XMLNSC.SubmitTCReqByLaborerRq.Header;
		DECLARE rInBodyRef REFERENCE TO InputRoot.XMLNSC.SubmitTCReqByLaborerRq.Body;   
		
	 --SET THE HEADER AND BODY GLOBAL i.e ALL NODES CAN SEE IT
		SET Environment.Variables.Header = rInHeaderRef;
		SET Environment.Variables.Body = rInBodyRef; 
	
	
	    SET Environment.Variables.Properties = InputRoot.Properties;
        SET Environment.Variables.MQMD = InputRoot.MQMD;
        SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;    
        
        
			
		IF EXISTS(Environment.Properties.SubmitTCReqByLaborer.HTTP_INT_SubmitTCReqByLaborer[]) THEN
			
			set Environment.Properties.SubmitTCReqByLaborer.HTTP_SubmitTCReqByLaborer = 
				Environment.Properties.SubmitTCReqByLaborer.HTTP_INT_SubmitTCReqByLaborer;
				
			DELETE FIELD Environment.Properties.SubmitTCReqByLaborer.HTTP_INT_SubmitTCReqByLaborer;
		END IF;
			
			
	--DECLEARING REFRENCE TO THE SubmitTCReqByLaborerFlow XML FLOW
	   DECLARE propertiesRef  REFERENCE TO Environment.Properties.SubmitTCReqByLaborer.HTTP_SubmitTCReqByLaborer.Variables; 
	   
	   
	--DECLARE ALL THE REQUEST PARAMETERS 
	
		DECLARE LaborOfficeId INT ; 
		DECLARE SequenceNumber INT;
		DECLARE TCReason  INT;
		
		SET LaborOfficeId= rInBodyRef.LaborOfficeId;
		SET SequenceNumber =rInBodyRef.SequenceNumber;
		SET TCReason= rInBodyRef.TCReason; 
		
		--DECLARE THE IDNumber FROM THE REQUEST HEADER
		DECLARE LaborerIdNo CHAR rInHeaderRef.UserInfo.IDNumber;
	    DECLARE LaborerTypeId INT; 
	    
	   --CHECKING OF THE FIRST NUMBER OF THE IDNumber IS 1 OR OTHER
	    DECLARE FunLeftResult CHAR;
	    SET FunLeftResult = LEFT(LaborerIdNo,1);   
	    
	   
	   --CREATE THE SubmitTCReqByLaborerRs HEADER AND BODY  
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.SubmitTCReqByLaborerRs  NAME 'Header'; 
		CREATE LASTCHILD OF OutputRoot.XMLNSC.SubmitTCReqByLaborerRs  NAME 'Body';  
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.SubmitTCReqByLaborerRs.Header; 
		DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.SubmitTCReqByLaborerRs.Body;
	      
	  
	    -- INOUT AND OUTPUT HEADERS SETTING
	  	 SET rOutHeaderRef = rInHeaderRef;
	  	 
	  	 
	  	 
	--CHECK IF THE IDNumber IN HEADER IS EXIST OR NOT 
	--IF NOT RETURN ERROR AND EXIST THE FLOW
			
		IF LaborerIdNo is NULL THEN
			
			CALL Create_esbXML_Response_Header (propertiesRef.MissingIdNumber,rInHeaderRef,rOutHeaderRef);
				 	     
		 	  	 propagate to terminal 'out1' ;
		 	  	 RETURN TRUE; 
		 	  	
		END IF;
		
		--IF THE IDNumber STARTS WITH 1 SET THE LaborerTypeId EQUAL 1 ELSE SET LaborerTypeId EQUAL 2
		
		IF FunLeftResult =1 THEN
		
			SET LaborerTypeId = 1;
		
		ELSE
		
			SET LaborerTypeId = 2;
			  
		END IF; 
		
		
		

	--SETTING THE LaborerTypeId AS GLOBAL
	   SET Environment.Variables.LaborerTypeId = LaborerTypeId ;

			
			
			
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
