

BROKER SCHEMA com.qiwa.esb.SubmitTCReqByLaborer
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE HTTP_SubmitTCReqByLaborer_subflow_error
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--COPYING HEADERS
		CALL CopyMessageHeaders();		 	 
		--DECLARE THE HEADER AND THE BODY OF THE REQUEST
		DECLARE rInHeaderRef REFERENCE TO Environment.Variables.Header;
		DECLARE rInBodyRef REFERENCE TO Environment.Variables.Body;
		--DECLEARING REFRENCE TO THE SubmitTCReqByLaborerFlow XML FLOW
		DECLARE propertiesRef REFERENCE TO Environment.Properties.SubmitTCReqByLaborer.HTTP_SubmitTCReqByLaborer.Variables;

		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;
		--CREATE THE SubmitTCReqByLaborerRs HEADER AND BODY
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.SubmitTCReqByLaborerRs NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.SubmitTCReqByLaborerRs NAME 'Body';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.SubmitTCReqByLaborerRs.Header;
		DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.SubmitTCReqByLaborerRs.Body;
		-- INOUT AND OUTPUT HEADERS SETTING
		SET rOutHeaderRef = rInHeaderRef;	  
		-- CALL Create_esbXML_Response_Header (propertiesRef.ValidateProblem,rInHeaderRef,rOutHeaderRef);	 	


		CALL Create_esbXML_Response_Header(Environment.Variables.MWResponse.status,rInHeaderRef,rOutHeaderRef);			
	  
	  	 		
		--CALL Create_esbXML_Response_Header(Environment.Variables.MWResponse.status,rInHeaderRef,rOutHeaderRef);	  	 
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;