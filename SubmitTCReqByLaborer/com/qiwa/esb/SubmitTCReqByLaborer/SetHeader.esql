BROKER SCHEMA com.qiwa.esb.SubmitTCReqByLaborer
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE SetHeader
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--COPYING HEADERS
		CALL CopyMessageHeaders();		 	 
		--DECLARE THE HEADER AND THE BODY OF THE REQUEST
		DECLARE rInHeaderRef REFERENCE TO Environment.Variables.Header;
		DECLARE rInBodyRef REFERENCE TO Environment.Variables.Body;
		--DECLEARING REFRENCE TO THE SubmitTCReqByLaborerFlow XML FLOW
		DECLARE propertiesRef REFERENCE TO Environment.Properties.SubmitTCReqByLaborer.HTTP_SubmitTCReqByLaborer.Variables;

		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;
		--CREATE THE SubmitTCReqByLaborerRs HEADER AND BODY
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.SubmitTCReqByLaborerRs NAME 'Header';
		
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.SubmitTCReqByLaborerRs.Header;
		
		-- INOUT AND OUTPUT HEADERS SETTING
		IF EXISTS(Environment.ValidationError.ErrorsList[]) THEN
			CALL Create_esbXML_Response_Header(propertiesRef.ValidateError,rInHeaderRef,rOutHeaderRef);
			CREATE LASTCHILD OF OutputRoot.XMLNSC.SubmitTCReqByLaborerRs NAME 'Body';
			DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.SubmitTCReqByLaborerRs.Body;
			SET OutBodyRef.ErrorsList = Environment.ValidationError.ErrorsList;
		ELSE 			
			CALL Create_esbXML_Response_Header(Environment.Variables.MWResponse.status,rInHeaderRef,rOutHeaderRef); 
			-- DYNAMIC ADJUSTING OF ERROR 'E0001551''s EN & AR descriptions with the numeric value of (NoticePeriod +30) 
			IF CAST(Environment.Variables.MWResponse.status AS CHAR) = CAST(propertiesRef.EXPDateError AS CHAR) THEN   
			   SET rOutHeaderRef.ResponseStatus.ArabicMsg  = CAST(propertiesRef.ARErrDescPRT1 AS CHAR) || CAST(Environment.Variables.dynamicErrValue AS CHAR) || CAST(propertiesRef.ARErrDescPRT2 AS CHAR);
			   SET rOutHeaderRef.ResponseStatus.EnglishMsg = CAST(propertiesRef.ENErrDescPRT1 AS CHAR) || CAST(Environment.Variables.dynamicErrValue AS CHAR) || CAST(propertiesRef.ENErrDescPRT2 AS CHAR);
			END IF;	 
		END IF; 	

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;