

BROKER SCHEMA com.qiwa.esb.validatelaborerintc
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE ValLabInTC_NonSaudi
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE EV REFERENCE TO Environment.Variables;
		SET OutputRoot.Properties = EV.Properties;
		SET OutputRoot.MQMD = EV.MQMD ;
		SET OutputRoot.MQRFH2 = EV.MQRFH2 ;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.ValidateLaborerInTCRs NAME 'Header';

		DECLARE reqHeaderRef REFERENCE TO EV.XMLNSC.ValidateLaborerInTCRq.Header;
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.ValidateLaborerInTCRs.Header;

		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.ValidateLaborerInTC.ValidateLaborerInTC.Variables;
		SET EV.isSuccess = 'FALSE';
		--If no data is received then return error E0001466 and exit the flow.
		IF (NOT EXISTS (InputRoot.XMLNSC.row[])) THEN
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.NoLabInfo,reqHeaderRef,rOutHeaderRef);
			RETURN TRUE;
		ELSE
			--success call
			SET EV.isSuccess = 'TRUE';
			SET EV.NonSaudiRs.LaborerStatusId= InputRoot.XMLNSC.row.column[21].value;
			SET EV.NonSaudiRs.entry_date= InputRoot.XMLNSC.row.column[25].value;
		END IF;
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE Check_PendingChangeSponsorRequests (IN LaborerIdNumber CHAR,
	IN ListOfStatuses CHAR)RETURNS INTEGER
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Check_PendingChangeSponsorRequests";
END MODULE;