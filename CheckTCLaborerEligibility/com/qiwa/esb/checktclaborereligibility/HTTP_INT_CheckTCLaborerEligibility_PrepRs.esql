BROKER SCHEMA com.qiwa.esb.checktclaborereligibility
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE HTTP_INT_CheckTCLaborerEligibility_PrepRs
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		 CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		 -- TO Get Property file values
		 	
		DECLARE propertiesRef REFERENCE TO Environment.Properties.CheckTCLaborerEligibility.HTTP_CheckTCLaborerEligibility.Variables;
		DECLARE inMSGRef REFERENCE TO InputRoot.XMLNSC.CheckTCLaborerEligibilityRs;
		DECLARE inBodyRef REFERENCE TO inMSGRef.Body.*:*[<].*:*[<].*[<];
		DECLARE EnglishDescription CHAR;
		DECLARE ArabicDescription CHAR;
		DECLARE STATUS CHAR;
		DECLARE ESB_CODE CHAR;
		
		-- declaring reference to the output root response header getting out of the service  
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CheckTCLaborerEligibilityRs NAME 'Header'; 
		-- declaring reference to the input root response body for the msg recieved from the odm adapter 
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CheckTCLaborerEligibilityRs NAME 'Body';
		DECLARE outBodyRef REFERENCE TO OutputRoot.XMLNSC.CheckTCLaborerEligibilityRs.Body; 
		
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckTCLaborerEligibilityRs.Header;
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.CheckTCLaborerEligibilityRs.Header;
		
		
		IF rInputHeader.ResponseStatus.Code <> GetESBSuccessCode() THEN 
			DECLARE I INTEGER 1; 
			DECLARE J INTEGER CARDINALITY(inBodyRef.statusCodesList.StatusCode[]); 
			WHILE I <=J DO
				CALL getBackendEsb_MapErrorCode('ODMWS',inBodyRef.statusCodesList.StatusCode[I],inMSGRef.Header.ChannelId,EnglishDescription,ArabicDescription,STATUS,ESB_CODE);
				SET outBodyRef.ErrorsList.Error[I].ErrorCode = ESB_CODE;
				SET outBodyRef.ErrorsList.Error[I].ArDescription = ArabicDescription;
				SET outBodyRef.ErrorsList.Error[I].EngDescription = EnglishDescription;
				SET I = I +1;
			END WHILE;
			CALL Create_esbXML_Response_Header( propertiesRef.ValidationError,rInputHeader, rOutHeaderRef); 
		ELSE
			CALL Create_esbXML_Response_Header( GetESBSuccessCode(),rInputHeader, rOutHeaderRef); 
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
