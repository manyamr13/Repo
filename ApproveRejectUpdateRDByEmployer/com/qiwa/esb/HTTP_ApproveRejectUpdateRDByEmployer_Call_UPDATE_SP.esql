BROKER SCHEMA com.qiwa.esb
path Qiwa.Framework.Lib;

CREATE COMPUTE MODULE HTTP_ApproveRejectUpdateRDByEmployer_Call_UPDATE_SP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		  CALL CopyMessageHeaders();
		  DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.ApproveRejectUpdateRDByEmployer.HTTP_ApproveRejectUpdateRDByEmployer.Variables;
		  DECLARE InHeaderRef         REFERENCE TO Environment.Variables.Request.Header;
		  DECLARE InbodyRef           REFERENCE TO Environment.Variables.Request.Body;
		  DECLARE RequestRef REFERENCE TO Environment.Variables.Request;
		  
		  DECLARE StatusIds  INT;
		  DECLARE RejectionReason CHAR;
		  DECLARE RDRequestTypeId INT 1;
		  DECLARE ReleaseDateReqByLaborer Timestamp; 
		  DECLARE EmployerApproveRejDate TIMESTAMP  ;
	 	    DECLARE ReleaseDateTypeId TIMESTAMP; 
	 	    DECLARE RDUpdateDate TIMESTAMP; 
	 	    SET RDUpdateDate = CURRENT_TIMESTAMP; 
	 	    
	 	-- save headers     
	 	SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD  = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2  = Environment.Variables.MQRFH2; 
	 	    -- to be removed 
--	 	    set Environment.Variables.DB.ResultSet.ReleaseDateReqByLaborer = CURRENT_TIMESTAMP; 
	 	    
	 	    
		  If InbodyRef.IsApproved =1 then 
		  	 SET StatusIds=11;
		  	 SET RejectionReason= NULL;
		  	 SET ReleaseDateReqByLaborer = Environment.Variables.DB.ResultSet.ReleaseDateReqByLaborer;
		  	 SET EmployerApproveRejDate= CURRENT_TIMESTAMP; 
		  ELSE 
		  	SET StatusIds =12;
		  	SET RejectionReason = InbodyRef.RejectionReason ;  
		    SET ReleaseDateReqByLaborer = NULL;
		    SET EmployerApproveRejDate= CURRENT_TIMESTAMP; 
		  END IF;

		  DECLARE RESULTID INT;
		  -- to be removed
--		  SET InbodyRef.RDUpdateRequestId= 10022;
		  SET RESULTID  =  Update_UpdateReleaseDateRequest (   CAST(InbodyRef.RDUpdateRequestId  AS INTEGER),
                                                               CAST(StatusIds AS INTEGER),
                                                               COALESCE(EmployerApproveRejDate,NULL),
                                                               COALESCE(ReleaseDateReqByLaborer,NULL), 
                                                               COALESCE(CAST(RejectionReason AS CHARACTER),NULL));
		 DECLARE RESULTID2 INT; 
		   -- to be removed
		   -- SET Environment.Variables.DB.ResultSet.ReleaseDateReqByLaborer = '2021-06-12 00:00:00' ;
           -- SET  ReleaseDateReqByLaborer = '2021-06-12 00:00:00.000'    ;                               
		  SET RESULTID2 =  Update_ReleaseDate(     CAST(InbodyRef.RDUpdateRequestId AS INTEGER), --10022
                                                   1,
                                                   CAST(ReleaseDateReqByLaborer AS TIMESTAMP),-- empty from search
                                                   1,
                                                   CAST(RDUpdateDate AS TIMESTAMP), -- 2021-04-20 13:11:12.253
                                                   CAST(InHeaderRef.UserInfo.IDNumber AS CHARACTER), -- 1003012448 
                                                   COALESCE(CAST(InHeaderRef.TransactionId AS INTEGER),NULL)); --  1618917068
	
	
	
	          
	
		 			CREATE FIRSTCHILD OF OutputRoot.XMLNSC.ApproveRejectUpdateRDByEmployerRs NAME 'Header';
					DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.ApproveRejectUpdateRDByEmployerRs.Header;
					CREATE LASTCHILD OF OutputRoot.XMLNSC.ApproveRejectUpdateRDByEmployerRs NAME 'Body';
					DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.ApproveRejectUpdateRDByEmployerRs.Body;
					
								IF RESULTID2 =0 AND  RESULTID = 0 
								 THEN 
			          			 	CALL Create_esbXML_Response_Header(GetESBSuccessCode(),InHeaderRef,OutHeaderRef);
			                    ELSE 
			                    	CALL Create_esbXML_Response_Header(loadedPropertiesRef.FailedToApproveByEmployer,InHeaderRef,OutHeaderRef);
			                    END IF;
						 	RETURN TRUE;		
	END;
	
	CREATE PROCEDURE Update_UpdateReleaseDateRequest  (
    IN	RDUpdateRequestId  INTEGER,
	IN	StatusId   INTEGER,
	IN	EmployerApproveRejDate  TIMESTAMP,
	IN	ReleaseDateReqByLaborer  TIMESTAMP,
	IN	RejectionReason    CHARACTER )
RETURNS INTEGER LANGUAGE DATABASE
EXTERNAL NAME "dbo.Update_UpdateReleaseDateRequest";  


    CREATE PROCEDURE Update_ReleaseDate  (
    IN    RequestId  INTEGER,
    IN    RDRequestTypeId  INTEGER, 
    IN    ReleaseDate TIMESTAMP,
    IN    ReleaseDateTypeId INTEGER,
    IN    RDUpdateDate  TIMESTAMP,
    IN    RDCurrentEmployerIdNo CHARACTER, 
    IN    MWTransactionId  INTEGER) 
    	 
RETURNS INTEGER LANGUAGE DATABASE
EXTERNAL NAME "dbo.Update_ReleaseDate"; 

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
