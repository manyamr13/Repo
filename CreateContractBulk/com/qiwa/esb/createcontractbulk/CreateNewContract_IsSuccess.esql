BROKER SCHEMA com.qiwa.esb.createcontractbulk
PATH Qiwa.Framework.Lib;

CREATE FILTER MODULE CreateNewContract_IsSuccess
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE EV REFERENCE TO Environment.Variables;
		-- ref to properties, Header and Body
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.CreateContractBulk.CreateContractBulkFlow.Variables;
		DECLARE InBodyRef REFERENCE TO EV.XMLNSC.CreateContractBulkRq.Body; 
		
		IF Root.XMLNSC.CreateNewContractRs.Header.ResponseStatus.Code = GetESBSuccessCode() THEN
			SET EV.ESB.ContractList[EV.ESB.ContractCount].ContractId = Root.XMLNSC.CreateNewContractRs.Body.ContractId;
			SET EV.ESB.ContractCount = EV.ESB.ContractCount + 1;
			CALL Update_ContractRequestItem(CAST(EV.ESB.BulkId[1].BulkId as INTEGER),
											InBodyRef.ContractList.ContractItem[EV.ESB.x].LaborersDetails.LaborerIdNo,
											CAST(loadedPropertiesRef.CreatedStatusId as INTEGER),
											CAST(Root.XMLNSC.CreateNewContractRs.Body.ContractId as INTEGER),
											NULL);
		ELSE
			CALL Update_ContractRequestItem(CAST(EV.ESB.BulkId[1].BulkId as INTEGER),
											InBodyRef.ContractList.ContractItem[EV.ESB.x].LaborersDetails.LaborerIdNo,
											CAST(loadedPropertiesRef.RejectedStatusId as INTEGER),
											NULL,
											Root.XMLNSC.CreateNewContractRs.Header.ResponseStatus.EnglishMsg);
		END IF; 
		COMMIT; 
		RETURN FALSE;
	END;
CREATE PROCEDURE Update_ContractRequestItem (IN ContractBulkId INTEGER,
											IN LaborerId CHARACTER,
											IN StatusId INTEGER,
											IN ContractId INTEGER, 
											IN RejectionReason CHARACTER)
LANGUAGE DATABASE
EXTERNAL NAME "dbo.Update_ContractRequestItem";
END MODULE;
