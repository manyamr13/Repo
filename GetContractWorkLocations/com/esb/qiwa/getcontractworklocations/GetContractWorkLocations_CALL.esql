BROKER SCHEMA com.esb.qiwa.getcontractworklocations


CREATE COMPUTE MODULE Call_DB
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders(); 
		
		IF EXISTS(Environment.Properties.GetContractWorkLocations.HTTP_INT_GetContractWorkLocationsFlow[]) THEN
		SET Environment.Properties.GetContractWorkLocations.HTTP_GetContractWorkLocationsFlow =
		Environment.Properties.GetContractWorkLocations.HTTP_INT_GetContractWorkLocationsFlow;
		DELETE FIELD Environment.Properties.GetContractWorkLocations.HTTP_INT_GetContractWorkLocationsFlow[];
		END IF;
 
		DECLARE rInHeaderRef REFERENCE TO InputRoot.XMLNSC.GetContractWorkLocationsRq.Header;
		DECLARE rInBodyRef REFERENCE TO InputRoot.XMLNSC.GetContractWorkLocationsRq.Body;  
		
		Create FIRSTCHILD OF OutputRoot.XMLNSC.GetContractWorkLocationsRs NAME 'Header';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.GetContractWorkLocationsRs.Header;
		SET rOutHeaderRef = rInHeaderRef;
		 
		CALL ContractManagement_GetContractWorkLocations(Environment.Variables.DB.ResultSet[]);
            
		IF EXISTS(Environment.Variables.DB.ResultSet[]) THEN
			CREATE LASTCHILD OF OutputRoot.XMLNSC.GetContractWorkLocationsRs NAME 'Body';
			DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.GetContractWorkLocationsRs.Body;  
			DECLARE resultSetCount INT CARDINALITY(Environment.Variables.DB.ResultSet[]);
			DECLARE i INT 1;
			WHILE i <= resultSetCount DO
				SET	rOutBodyRef.WorkLocationList.WorkLocationItem[i].Code = Environment.Variables.DB.ResultSet[i].Code;
				SET	rOutBodyRef.WorkLocationList.WorkLocationItem[i].NameAr = Environment.Variables.DB.ResultSet[i].NameAr;
				SET	rOutBodyRef.WorkLocationList.WorkLocationItem[i].NameEn = Environment.Variables.DB.ResultSet[i].NameEn;
				SET i = i + 1;
			END WHILE;
			-- SET OutputRoot.XMLNSC.Body = rOutBodyRef; 
	    Call Qiwa.Framework.Lib.Create_esbXML_Response_Header(Qiwa.Framework.Lib.GetESBSuccessCode() ,rInHeaderRef,rOutHeaderRef);
		END IF;  
			RETURN TRUE;
	END;

	CREATE PROCEDURE ContractManagement_GetContractWorkLocations() 
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Get_ContractWorkLocations";  
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN 
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

END MODULE;


