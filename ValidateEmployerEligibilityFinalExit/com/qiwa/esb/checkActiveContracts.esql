BROKER SCHEMA com.qiwa.esb
path Qiwa.Framework.Lib;


CREATE COMPUTE MODULE checkActiveContracts
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE loadProperties REFERENCE TO Environment.Properties.ValidateEmployerEligibilityFinalExit.ValidateEmployerEligibilityFinalExitFlow.Variables; 
		DECLARE InHeaderRef  REFERENCE TO Environment.Variables.Request.Header;  
		DECLARE InBodyRef  REFERENCE TO Environment.Variables.Request.Body;     
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;
		
		
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.ValidateEmployerEligibilityFinalExitRs NAME 'Header';
		DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.ValidateEmployerEligibilityFinalExitRs.Header; 

      	CREATE LASTCHILD OF OutputRoot.XMLNSC.ValidateEmployerEligibilityFinalExitRs  NAME 'Body';
		DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.ValidateEmployerEligibilityFinalExitRs.Body;
	
		DECLARE CheckResultID Integer; 
		DECLARE x CHARACTER  InBodyRef.IdNumber;
		SET CheckResultID   = Check_ActiveContract ( InBodyRef.IDNumber, 
		    										 Environment.Variables.DB.ResultSet[]); 
		     								   
	 -- if active contract=1 1001  
      IF Environment.Variables.DB.ResultSet.HasActiveContracts = 1 THEN 
      	CALL Create_esbXML_Response_Header(loadProperties.EligibleEmployerCode,InHeaderRef,OutHeaderRef); 
		SET OutHeaderRef.ResponseStatus.ArabicMsg = loadProperties.EligibleEmployerARDesc;
		SET OutHeaderRef.ResponseStatus.EnglishMsg = loadProperties.EligibleEmployerENDesc;
		-- Prepare body
		SET OutBodyRef.ContractExpiryDate = Environment.Variables.DB.ResultSet.ExpiryDate;
		-- if employee transfer  =1 send 1002
      ELSEIF Environment.Variables.DB.ResultSet.HasTransferLaborers= 1 THEN     
      	CALL Create_esbXML_Response_Header(loadProperties.PendingRequestCode,InHeaderRef,OutHeaderRef); 
	  	SET OutHeaderRef.ResponseStatus.ArabicMsg = loadProperties.PendingRequestARDesc;
	  	SET OutHeaderRef.ResponseStatus.EnglishMsg = loadProperties.PendingRequestENDesc;
	  	
 		SET OutBodyRef.ContractExpiryDate = Environment.Variables.DB.ResultSet.ExpiryDate;
		
      ELSEIF  Environment.Variables.DB.ResultSet.HasActiveContracts = 0 AND Environment.Variables.DB.ResultSet.HasTransferLaborers = 0 THEN
    --  if active contract=0 AND is employee transfer  =0 send 1001 
		  CALL Create_esbXML_Response_Header(loadProperties.EligibleEmployerCode,InHeaderRef,OutHeaderRef); 
		  SET OutHeaderRef.ResponseStatus.ArabicMsg = loadProperties.EligibleEmployerARDesc;
		  SET OutHeaderRef.ResponseStatus.EnglishMsg = loadProperties.EligibleEmployerENDesc;
		  SET OutBodyRef.ContractExpiryDate = Environment.Variables.DB.ResultSet.ExpiryDate; 
	  ELSE
			CALL Create_esbXML_Response_Header(loadProperties.TechnicalError,InHeaderRef,OutHeaderRef);
		END IF;
		RETURN TRUE;			
	END;

 CREATE PROCEDURE Check_ActiveContract  (IN  LaborerIdNumber   CHARACTER )			 				

RETURNS INTEGER LANGUAGE DATABASE DYNAMIC RESULT SETS 1 
EXTERNAL NAME "dbo.Check_ActiveContract";

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


