

BROKER SCHEMA com.qiwa.esb.GetEstablishmentTemplatesList
path Qiwa.Framework.Lib;


CREATE COMPUTE MODULE CheckUserElig_Request
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		--reference to request header and body
		DECLARE InHeaderRef REFERENCE TO InputRoot.XMLNSC.GetEstablishmentContractTemplatesListRq.Header;
		DECLARE InBodyRef REFERENCE TO InputRoot.XMLNSC.GetEstablishmentContractTemplatesListRq.Body;
		--Declare properties file
		DECLARE loadproperties REFERENCE TO Environment.Properties.GetEstablishmentContractTemplatesList.GetEstablishmentTemplatesListFlow.Variables;
		--
		--save the input message and headers
		SET Environment.Variables.Properties = InputRoot.Properties;
		SET Environment.Variables.MQMD = InputRoot.MQMD;
		SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;
		SET Environment.Variables.XMLNSC = InputRoot.XMLNSC;
		SET Environment.Variables.Request = InputRoot.XMLNSC.GetEstablishmentContractTemplatesListRq;			
		
		
		-- check on id number
		IF InHeaderRef.UserInfo.IDNumber IS NULL THEN
			SET Environment.Variables.MWResponse.status = loadproperties.IdNumberMissing;
			propagate to terminal 'out1' delete none;
			RETURN FALSE;
		END IF;
		
		IF (InHeaderRef.ChannelId = loadproperties.ChannelId) OR (InHeaderRef.ChannelId = loadproperties.unifiedPortal) THEN 
			PROPAGATE TO TERMINAL 'out2'; -- skip CheckUserEligibility 
			RETURN FALSE;		
					
		ELSE			
			-- prepare call to CheckUserEligibility
			CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC');
			SET OutputRoot.XMLNSC.CheckUserEligibilityRq.Header = InHeaderRef;
			DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRq.Header;
			CREATE LASTCHILD OF OutputRoot.XMLNSC.CheckUserEligibilityRq NAME 'Body';
			DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRq.Body;
			SET OutHeaderRef.ServiceCode = loadproperties.CUE;
			SET OutHeaderRef.ChannelId = loadproperties.ChannelId;
			-- prepare body
			SET OutBodyRef.UserId = InHeaderRef.UserInfo.UserId;
			SET OutBodyRef.IdNo = InHeaderRef.UserInfo.IDNumber;
			SET OutBodyRef.LaborOfficeId = InBodyRef.LaborOfficeId;
			SET OutBodyRef.EstablishmentSequence = InBodyRef.SequenceNumber;
			SET OutBodyRef.ServiceId = loadproperties.ServiceId;
	
			SET Environment.InternalServiceCaller.callCorrIDOffset = '13';
	
			RETURN TRUE;
		
		END IF;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;