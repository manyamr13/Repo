BROKER SCHEMA com.esb.qiwa.getcontractspecialties


CREATE COMPUTE MODULE HTTP_GetContractSpecialtiesFlow_Call_DB
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		IF EXISTS(Environment.Properties.GetContractSpecialties.HTTP_INT_GetContractSpecialtiesFlow[])  THEN
			SET Environment.Properties.GetContractSpecialties.HTTP_GetContractSpecialtiesFlow =
			Environment.Properties.GetContractSpecialties.HTTP_INT_GetContractSpecialtiesFlow;
			DELETE FIELD Environment.Properties.GetContractSpecialties.HTTP_INT_GetContractSpecialtiesFlow[];
		END IF;
		DECLARE rInHeaderRef REFERENCE TO InputRoot.XMLNSC.GetContractSpecialtiesRq.Header;
		DECLARE rInBodyRef REFERENCE TO InputRoot.XMLNSC.GetContractSpecialtiesRq.Body;
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.GetContractSpecialtiesRs NAME 'Header';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.GetContractSpecialtiesRs.Header;
		CALL Get_ContractSpecialties(Environment.Variables.DB.ResultSet[]);
		SET rOutHeaderRef = rInHeaderRef;
		IF EXISTS(Environment.Variables.DB.ResultSet[]) THEN
			CREATE LASTCHILD OF OutputRoot.XMLNSC.GetContractSpecialtiesRs NAME 'Body';
			DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.GetContractSpecialtiesRs.Body;
			DECLARE i INT 1 ; 
		    DECLARE resultSetCount INT CARDINALITY(Environment.Variables.DB.ResultSet[]);
			WHILE (i <= resultSetCount) DO
			SET rOutBodyRef.SpecialtyList.SpecialtyItem[i].Code = Environment.Variables.DB.ResultSet[i].Code;
			SET rOutBodyRef.SpecialtyList.SpecialtyItem[i].NameAr = Environment.Variables.DB.ResultSet[i].NameAr;
			SET rOutBodyRef.SpecialtyList.SpecialtyItem[i].NameEn = Environment.Variables.DB.ResultSet[i].NameEn;
			SET i = i+1; 
			END WHILE ;
			
		END IF;
		Call Qiwa.Framework.Lib.Create_esbXML_Response_Header(Qiwa.Framework.Lib.GetESBSuccessCode() ,rInHeaderRef,rOutHeaderRef);
		RETURN TRUE;
       
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE Get_ContractSpecialties()
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Get_ContractSpecialties";
END MODULE;
