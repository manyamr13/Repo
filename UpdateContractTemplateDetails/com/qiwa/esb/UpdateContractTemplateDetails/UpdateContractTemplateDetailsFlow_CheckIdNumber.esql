BROKER SCHEMA com.qiwa.esb.UpdateContractTemplateDetails


CREATE FILTER MODULE UpdateContractTemplateDetailsFlow_CheckIdNumber
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- save the input message and headers
		SET Environment.Variables.Properties = Root.Properties;
		SET Environment.Variables.MQMD = Root.MQMD;
		SET Environment.Variables.MQRFH2 = Root.MQRFH2;
		SET Environment.Variables.XMLNSC = Root.XMLNSC;
		-- Header.UserInfo.IDNumber is null , return E0000059 ID number is not found
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.UpdateContractTemplateDetails.UpdateContractTemplateDetailsFlow.Variables;

		IF Root.XMLNSC.UpdateContractTemplateDetailsRq.Header.UserInfo.IDNumber IS NULL THEN
			--Send Error code to MWbusiness error
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.IdNumberNotFound;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.LaborerDetails.LaborerTypeId AS INTEGER) = CAST(loadedPropertiesRef.Two AS INTEGER) AND CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ContractDurationId AS INTEGER) = CAST(loadedPropertiesRef.Two AS INTEGER) THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.UnlimitedNotAllowed;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ContractDurationId AS INTEGER) = CAST(loadedPropertiesRef.ConDuIdOne AS INTEGER) AND Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ContractPeriod IS NULL THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.ContractPeriodError;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ProbationPeriod AS INTEGER) > CAST(loadedPropertiesRef.ProbPeriodOneEighty AS INTEGER) THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.ProbationPeriodError;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.VacationPeriod AS INTEGER) < CAST(loadedPropertiesRef.VacPeriodTwentyOne AS INTEGER) THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.VacationPeriodError;
			RETURN FALSE;
		ELSEIF ( (Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.PercentageReasonEN IS NULL
			OR Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.PercentageReasonAR IS NULL )
			AND CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.SalaryTypeId AS INTEGER) = 2 )THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.MissingData;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.WorkingHoursTypeId AS INTEGER) = CAST(loadedPropertiesRef.WorkingHoursTypeIdOne AS INTEGER)
			AND Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.HoursPerWeek IS NULL THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.HoursPerWeekError;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.WorkingHoursTypeId AS INTEGER) = CAST(loadedPropertiesRef.WorkingHoursTypeIdTwo AS INTEGER)
			AND (Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.DaysPerWeek IS NULL
			OR Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.HoursPerDay IS NULL) THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.DaysAndHoursError;
			RETURN FALSE;
		ELSEIF CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ProbationPeriod AS INTEGER) IS NOT NULL
			AND CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ProbationPeriod AS INTEGER) > CAST(loadedPropertiesRef.Zero AS INTEGER)
			AND CAST(Root.XMLNSC.UpdateContractTemplateDetailsRq.Body.ContractDetails.ProbationTerminationRight AS INTEGER) IS NULL
			THEN
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.ProbTermMand;
			RETURN FALSE;
			 
		ELSEIF (Root.XMLNSC.UpdateContractTemplateDetailsRq.Header.ChannelId = loadedPropertiesRef.unifiedPortal) THEN
			-- for unifiedPortal ChannelID skip CHeckUserEligibility
			RETURN UNKNOWN;
		ELSE
			RETURN TRUE;
		END IF;
	END;
END MODULE;