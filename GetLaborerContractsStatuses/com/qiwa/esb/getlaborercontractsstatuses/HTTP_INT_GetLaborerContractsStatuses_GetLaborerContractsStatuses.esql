BROKER SCHEMA com.qiwa.esb.getlaborercontractsstatuses

PATH Qiwa.Framework.Lib;
CREATE COMPUTE MODULE HTTP_INT_GetLaborerContractsStatuses_GetLaborerContractsStatuses
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		IF FIELDNAME(Environment.Variables) IS NULL THEN
			CREATE FIELD Environment.Variables;

		END IF;		


		DECLARE EV REFERENCE TO Environment.Variables;
		DECLARE i INTEGER 1;
		DECLARE Result INTEGER;		
		
		
				IF EXISTS(Environment.Properties.GetLaborerContractsStatuses.HTTP_INT_GetLaborerContractsStatuses[]) THEN
			SET Environment.Properties.GetLaborerContractsStatuses.HTTP_GetLaborerContractsStatuses =
			Environment.Properties.GetLaborerContractsStatuses.HTTP_INT_GetLaborerContractsStatuses;
			DELETE FIELD Environment.Properties.GetLaborerContractsStatuses.HTTP_INT_GetLaborerContractsStatuses;
		END IF;

		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.GetLaborerContractsStatuses.HTTP_GetLaborerContractsStatuses;
		DECLARE rInHeaderRef REFERENCE TO InputRoot.XMLNSC.GetLaborerContractsStatusesRq.Header;
		DECLARE rInBodyRef REFERENCE TO InputRoot.XMLNSC.GetLaborerContractsStatusesRq.Body;

		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.GetLaborerContractsStatusesRs NAME 'Header';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.GetLaborerContractsStatusesRs.Header;

	
         	CALL Get_LaborerStatuses (
		
           COALESCE(CAST(rInBodyRef.LaborerIdNo AS INTEGER),0),
           
		EV.QiwaDB.ResultSet[]) INTO Result;

		COMMIT;
		
		IF NOT EXISTS(EV.QiwaDB.ResultSet[]) THEN
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.Variables.NoDataFound,rInHeaderRef,rOutHeaderRef);
		ELSE
			CREATE LASTCHILD OF OutputRoot.XMLNSC.GetLaborerContractsStatusesRs NAME 'Body';
			DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.GetLaborerContractsStatusesRs.Body;
			CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInHeaderRef,rOutHeaderRef);				
				
			FOR SOURCE AS EV.QiwaDB.ResultSet[] DO					
					
				SET rOutBodyRef.StatusList.StatusItem.Item[i].Resultset.Code = SOURCE.Code;
				SET rOutBodyRef.StatusList.StatusItem.Item[i].Resultset.NameAr = SOURCE.StatusAr;
				SET rOutBodyRef.StatusList.StatusItem.Item[i].Resultset.NameEn = SOURCE.StatusEn;
				SET i = i + 1;					

		
			END FOR;
			
			
		END IF;
		
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE Get_LaborerStatuses (
	
	IN LaborerIdNo INT
	
	) RETURNS INTEGER

	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.Get_LaborerStatuses";

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

END MODULE;
