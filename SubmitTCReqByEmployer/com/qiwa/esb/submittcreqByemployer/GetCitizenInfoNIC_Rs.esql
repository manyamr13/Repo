BROKER SCHEMA com.qiwa.esb.submittcreqByemployer
path Qiwa.Framework.Lib;

CREATE COMPUTE MODULE GetCitizenInfoNIC_Rs
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE EV REFERENCE TO Environment.Variables;
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.SubmitTCReqByEmployer.HTTP_SubmitTCReqByEmployer.Variables;
		DECLARE InBodyRef   REFERENCE TO Environment.Variables.Request.Body;
		DECLARE InHeaderRef REFERENCE TO Environment.Variables.Request.Header;
		
		DECLARE serviceResponseMsg REFERENCE TO InputRoot.XMLNSC.*:GetCitizenInformationNICRs;
		DECLARE serviceResult REFERENCE TO serviceResponseMsg.Body.*:GetCitizenInfoResponse.*:GetCitizenInfoResult;
		
		-- Success received from NIC GetCitizenInfo
		IF serviceResponseMsg.Header.ResponseStatus.Code = GetESBSuccessCode() THEN
			SET Environment.ConsumedServices.GetCitizenInfoRes.Status = serviceResult.*:Status;
		 	
		 	IF (UPPER(FIELDVALUE(Environment.ConsumedServices.GetCitizenInfoRes.Status)) <> 'DEAD') THEN
		 		-- If StatusCode <> ‘Dead’ and TCReason = 14 then return error E0000851 and exit the flow
				SET Environment.Variables.MWResponse.status = loadedPropertiesRef.EmployeeIsAlive;	 --E0000851
				PROPAGATE TO LABEL 'LabelError';
				RETURN FALSE;
		 	ELSE
		 		SET Environment.LogicVariable.CallSP = TRUE;
		 		-- Proceed for SP Call Create_TerminateContractRequest
		 		RETURN TRUE;
		 	END IF;
		ELSE
			-- Error received from NIC GetCitizenInfo
			SET Environment.Variables.MWResponse.status = serviceResponseMsg.Header.ResponseStatus.Code;	 
			PROPAGATE TO LABEL 'LabelError';
			RETURN FALSE;		 			
		END IF;

	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
