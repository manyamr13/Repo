BROKER SCHEMA com.qiwa.esb.submittcreqByemployer


CREATE COMPUTE MODULE HTTP_SubmitTCReqByEmployer_ValidateID
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF FIELDNAME(Environment.Variables) IS NULL THEN
			CREATE FIELD Environment.Variables;
		END IF;
		-- CALL CopyMessageHeaders();
--		IF EXISTS(Environment.Properties.SubmitTCReqByEmployer.INT_HTTP_SubmitTCReqByEmployer []) THEN
--			set Environment.Properties.SubmitTCReqByEmployer.HTTP_SubmitTCReqByEmployer =
--			Environment.Properties.SubmitTCReqByEmployer.INT_HTTP_SubmitTCReqByEmployer ;
--			DELETE FIELD Environment.Properties.SubmitTCReqByEmployer.INT_HTTP_SubmitTCReqByEmployer ;
--		END IF;
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.SubmitTCReqByEmployer.HTTP_SubmitTCReqByEmployer.Variables;
		DECLARE SubmitRQHeader REFERENCE TO Environment.Variables.XMLNSC.SubmitTCReqByEmployerRq.Header;
		DECLARE SubmitRQBody REFERENCE TO Environment.Variables.XMLNSC.SubmitTCReqByEmployerRq.Body;		
		-- save headers
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD ;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2 ;	    
		-- Header.UserInfo.IDNumber is null , return E0000059 ID number is not found
		-- If IdNumber in the header starts with 1 then the LaborerTypeId will be 1 else the LaborerTypeId will be 2.

		IF STARTSWITH(SubmitRQBody.LaborerIdNo, '1') THEN
			SET Environment.Variables.LaborerTypeId= 1;
			IF SubmitRQBody.LaborerBirthDate IS NOT NULL THEN
				PROPAGATE TO TERMINAL 'out' DELETE NONE;
				RETURN FALSE;
			ELSE
				SET Environment.Variables.MWResponse.status = loadedPropertiesRef.MissingParam;
				PROPAGATE TO TERMINAL 'out2' DELETE NONE;
				RETURN FALSE;
			END IF;
		ELSE
			SET Environment.Variables.LaborerTypeId= 2;
			PROPAGATE TO TERMINAL 'out1' DELETE NONE;
			RETURN FALSE;
		END IF;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	
END MODULE;