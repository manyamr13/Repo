BROKER SCHEMA com.qiwa.esb.submittcreqByemployer

DECLARE urns NAMESPACE 'urn:MOI.NIC.eServices-V1';

CREATE COMPUTE MODULE GetCitizenInfoNIC_Rq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- ref to properties, Header and Body
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.SubmitTCReqByEmployer.HTTP_SubmitTCReqByEmployer.Variables;
		DECLARE InBodyRef   REFERENCE TO Environment.Variables.Request.Body;
		DECLARE InHeaderRef REFERENCE TO Environment.Variables.Request.Header;
		
		--save Header to output
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD 	  = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 	  = Environment.Variables.MQRFH2;
		
		SET OutputRoot.MQRFH2.usr.soap.action = 'urn:MOI.NIC.eServices-V1/IMOL_SERVICE/GetCitizenInfo';
		SET OutputRoot.MQRFH2.usr.soap.url= loadedPropertiesRef.NICURL;
		
		-- Call NIC GetCitizenInfo
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.GetCitizenInformationNICRq NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.GetCitizenInformationNICRq NAME 'Body';
		DECLARE outputRef  REFERENCE TO OutputRoot.XMLNSC.GetCitizenInformationNICRq.Body;
		
		SET OutputRoot.XMLNSC.GetCitizenInformationNICRq.Header = InHeaderRef.Header; 
		-- Prepare Body
        SET outputRef.urns:GetCitizenInfo.urns:ID = InBodyRef.LaborerIdNo;
        SET outputRef.urns:GetCitizenInfo.urns:DateOfBirth = InBodyRef.LaborerBirthDate;
        SET outputRef.urns:GetCitizenInfo.urns:OperatorId = InHeaderRef.UserInfo.IDNumber;
        SET outputRef.urns:GetCitizenInfo.urns:ClientIpAddress = loadedPropertiesRef.ClientIpAddress;
        SET outputRef.urns:GetCitizenInfo.urns:lang = loadedPropertiesRef.Lang; 	
		
		RETURN TRUE; 
	END;
 
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE Check_LaborerActiveContract    (IN LaborOfficeId  INTEGER,
													 IN SequenceNumber INTEGER  ,
													 IN LaborerIdNumber CHARACTER)
													RETURNS INTEGER

	LANGUAGE DATABASE DYNAMIC RESULT SETS 1
	EXTERNAL NAME "dbo.Check_LaborerActiveContract";
END MODULE;
