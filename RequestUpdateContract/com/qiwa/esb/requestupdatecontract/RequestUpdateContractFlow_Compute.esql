BROKER SCHEMA com.qiwa.esb.requestupdatecontract
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE RequestUpdateContractFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();

		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.RequestUpdateContractRs NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.RequestUpdateContractRs NAME 'Body';

		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.RequestUpdateContract.RequestUpdateContractFlow.Variables;
		DECLARE reqHeaderRef REFERENCE TO Environment.Variables.XMLNSC.RequestUpdateContractRq.Header;
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.RequestUpdateContractRs.Header;
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC.RequestUpdateContractRs.Body;
		DECLARE InRef REFERENCE TO Environment.Variables.XMLNSC.RequestUpdateContractRq.Body;
		DECLARE RsRoot REFERENCE TO Environment.Variables.RequestUpdateContractRs;
		DECLARE status INT Environment.Variabl.GetContractDetailsRs.ContractDetails.Status.Code;
		DECLARE ContractId INT InRef.ContractId;
		DECLARE ModificationReasonId, result INT;
		DECLARE RejectionDescription CHARACTER;
		
		SET ModificationReasonId = InRef.ModificationReason;
		SET RejectionDescription = InRef.ReasonText;

		IF (status = loadedPropertiesRef.Status) THEN
			CALL Update_ContractElements ( 	CAST(ContractId AS INT),
											NULL, -- LaborerAppRejDate,
											NULL, -- CAST (RejectionReasonId AS INT),
											CAST (ModificationReasonId AS INT),
											COALESCE ( RejectionDescription, NULL),
											CAST (loadedPropertiesRef.StatusId AS INT), -- 4 CAST(StatusId AS INT ),
											CAST (loadedPropertiesRef.TerminateAllSC AS INT), --0 CAST(TerminateAllSC AS INT ),
											NULL
											)
											INTO result; -- Environment.Variables.DB.ResultSet[]) INTO result;
			
			IF result = CAST(loadedPropertiesRef.SPSuccess AS INTEGER) THEN
				CALL Create_esbXML_Response_Header(GetESBSuccessCode(),reqHeaderRef,rOutHeaderRef);
			
			ELSE
				CALL Create_esbXML_Response_Header(loadedPropertiesRef.UpdateFailed,reqHeaderRef,rOutHeaderRef);
			END IF;
			
			RETURN TRUE;
		
		ELSE
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.InvalidContr;
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;
		END IF;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE Update_ContractElements (	IN ContractId INTEGER,
												IN LaborerAppRejDate DATE,
												IN RejectionReasonId INTEGER,
												IN ModificationReasonId INTEGER,
												IN RejectionDescription CHARACTER,
												IN StatusId INTEGER,
												IN TerminateAllSC INTEGER,
												IN MWTransactionId CHAR )
	
	RETURNS INTEGER
	LANGUAGE DATABASE EXTERNAL NAME "dbo.Update_ContractElements";
END MODULE;