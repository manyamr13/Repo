

BROKER SCHEMA com.qiwa.esb.requestupdatecontract
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE RequestUpdateContractFlow_Update_Contract
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;		


		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.RequestUpdateContractRs NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.RequestUpdateContractRs NAME 'Body';	     


		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.RequestUpdateContract.RequestUpdateContractFlow.Variables;
		-- DECLARE Inbody REFERENCE TO Environment.Variables.XMLNSC.GetLaborerTransferLaborersListRq.Body;
		DECLARE reqHeaderRef REFERENCE TO Environment.Variables.XMLNSC.RequestUpdateContractRq.Header;
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.RequestUpdateContractRs.Header;
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC.RequestUpdateContractRs.Body;
		DECLARE InRef REFERENCE TO Environment.Variables.XMLNSC.RequestUpdateContractRq.Body;

		DECLARE RsRoot REFERENCE TO Environment.Variables.RequestUpdateContractRs;
		DECLARE status INT Environment.Variabl.GetContractDetailsRs.ContractDetails.Status.Code;
		DECLARE newStatus INT '4';

		DECLARE ContractId INT InRef.ContractId;
		DECLARE ModificationReason INT InRef.ModificationReason;

		DECLARE LaborerAppRejDate CHAR NULL;
		DECLARE LaborOfficeId INTEGER NULL;
		DECLARE SequenceNumber INTEGER NULL;
		DECLARE EstablishmentId INTEGER NULL;
		DECLARE UnifiedNumberId INTEGER NULL;
		DECLARE EntityId CHAR NULL;
		DECLARE RequesterUserId INTEGER NULL;
		DECLARE RequesterIdNumber INTEGER NULL;
		DECLARE RequesterName CHAR NULL;
		DECLARE LaborerId INTEGER NULL;
		DECLARE LaborerName CHAR NULL;
		DECLARE LaborerTypeId INTEGER NULL;
		DECLARE JobTitleAr CHAR NULL;
		DECLARE JobTitleEn CHAR NULL;
		DECLARE LaborerJobNumber CHARACTER NULL;
		DECLARE ProbationPeriod INTEGER NULL;
		DECLARE WorkingHoursTypeId INTEGER NULL;
		DECLARE VacationPeriod INTEGER NULL;
		DECLARE ContractTypeId INTEGER NULL;
		DECLARE ContractDurationId INTEGER NULL;
		DECLARE Salary CHARACTER NULL;
		DECLARE RejectionDescription CHAR NULL;
		DECLARE EmployerAppRejDate CHAR NULL;
		DECLARE ContractPeriod INTEGER NULL;
		DECLARE RenewalStatusId INTEGER NULL;
		DECLARE NoticePeriod INTEGER NULL;
		DECLARE HijriStartDate CHAR NULL;
		DECLARE GergoianStartDate CHAR NULL;
		DECLARE HijriExpiryDate CHAR NULL;
		DECLARE GergoianExpiryDate CHAR NULL;
		DECLARE Allowances CHAR NULL;
		DECLARE AddClauses CHAR NULL;
		DECLARE DateTypeId INTEGER NULL;
		DECLARE LanguageId INTEGER NULL;
		DECLARE TerminateAllSC INT 0;

		DECLARE result INT;

		IF (status = '5') THEN

			CALL Update_Contract( CAST(ContractId AS INT),
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			InRef.ReasonText,
			NULL,
			NULL,
			CAST(newStatus AS INT) ,
			NULL,
			NULL,
			TerminateAllSC ,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			NULL,
			ModificationReason,
			NULL,
			NULL,    --Madhu----Added joiningDate Null as per the ICD-----
			NULL,
			Environment.Variables.DB.ResultSet[]) INTO result;
			IF result =0 THEN
				CALL Create_esbXML_Response_Header(GetESBSuccessCode(),reqHeaderRef,rOutHeaderRef);
			ELSE
				CALL Create_esbXML_Response_Header(loadedPropertiesRef.UpdateFailed,reqHeaderRef,rOutHeaderRef);
			END IF;
			RETURN TRUE;
		ELSE
			SET Environment.Variables.MWResponse.status = loadedPropertiesRef.InvalidContr;
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;
		END IF;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;	


	CREATE PROCEDURE Update_Contract(IN ContractId INTEGER,
	IN ContractTypeId INTEGER,
	IN ContractDurationId INTEGER,
	IN ContractPeriod INTEGER,
	IN LaborOfficeId INTEGER,
	IN SequenceNumber INTEGER,
	IN EstablishmentId INTEGER,
	IN UnifiedNumberId INTEGER,
	IN EntityId CHAR,
	IN RequesterIdNumber CHAR,
	IN RequesterUserId INTEGER,
	IN RequesterName CHAR,
	IN LaborerId CHAR,
	IN LaborerName CHAR,
	IN LaborerTypeId INTEGER,
	IN JobTitleAr CHAR,
	IN JobTitleEn CHAR,
	IN LaborerJobNumber CHARACTER,
	IN WorkingHoursTypeId INTEGER,
	IN VacationPeriod INTEGER,
	IN Salary CHARACTER,
	IN RenewalStatusId INTEGER,
	IN NoticePeriod INTEGER,
	IN ProbationPeriod INTEGER,
	IN HijriStartDate INTEGER,
	IN HijriExpiryDate INTEGER,
	IN GregorianStartDate CHAR,
	IN GregorianExpiryDate CHAR,
	IN LanguageId INTEGER,
	IN DateTypeId INTEGER,
	IN RejectionDescription CHAR,
	IN LaborerAppRejDate CHAR,
	IN EmployerAppRejDate CHAR,
	IN StatusId INTEGER,
	IN RelatedToId INTEGER,
	IN ContractTemplateId INTEGER,
	IN TerminateAllSC INTEGER,
	IN MWTransactionId CHARACTER,
	IN Allowances CHAR,
	IN AddedClauses CHAR,
	IN LaborerIdExpiryDate CHAR,
	IN LaborerEmail CHAR,
	IN LaborerMobileNumber CHAR,
	IN EstablishmentNameEn CHAR,
	IN EstablishmentNameAr CHAR,
	IN EstablishmentEmail CHAR,
	IN SalaryFrequency INTEGER,
	IN HoursPerWeek INTEGER,
	IN DaysPerWeek INTEGER,
	IN HoursPerDay INTEGER,
	IN Period INTEGER,
	IN Location CHAR,
	IN WorkField CHAR,
	IN RejectionReasonId INTEGER,
	IN ModificationReasonId INTEGER,
	IN UpdateContractReasonId INTEGER,
	IN JoiningDate DATE,  --Madhu--Added joiningDate as per the ICD-----
	IN AdditionalItems CHAR )
	RETURNS INTEGER
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1
	EXTERNAL NAME "dbo.Update_Contract";


END MODULE;